{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isIteratorLike from '@stdlib/assert-is-iterator-like' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Tests whether all iterated values are falsy.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {boolean} boolean indicating whether all iterated values are falsy\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator' ;\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var bool = iterNone( it );\n* // returns false\n*/\nfunction iterNone( iterator ) {\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( '0Cd49', iterator ) );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( v.value ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterNone;\n"],"names":["iterNone","iterator","v","isIteratorLike","TypeError","format","next","done","value"],"mappings":";;4LA2CA,SAASA,EAAUC,GAClB,IAAIC,EACJ,IAAMC,EAAgBF,GACrB,MAAM,IAAIG,UAAWC,EAAQ,QAASJ,IAEvC,OAAe,CAEd,IADAC,EAAID,EAASK,QACNC,KACN,OAAO,EAER,GAAKL,EAAEM,MACN,OAAO"}